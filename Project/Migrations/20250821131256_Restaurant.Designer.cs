// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restuarant_Management.Data;

#nullable disable

namespace Restuarant_Management.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20250821131256_Restaurant")]
    partial class Restaurant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restuarant_Management.Models.Chef", b =>
                {
                    b.Property<int>("ChefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChefId"));

                    b.Property<string>("ChefName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Specialty")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ChefId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Chefs");

                    b.HasData(
                        new
                        {
                            ChefId = 1,
                            ChefName = "Chef Antonio",
                            ExperienceYears = 15,
                            JoinedDate = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1,
                            Salary = 85000.00m,
                            Specialty = "Italian Cuisine"
                        },
                        new
                        {
                            ChefId = 2,
                            ChefName = "Chef Priya",
                            ExperienceYears = 10,
                            JoinedDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2,
                            Salary = 60000.00m,
                            Specialty = "Indian Curries"
                        },
                        new
                        {
                            ChefId = 3,
                            ChefName = "Chef Zhang Wei",
                            ExperienceYears = 12,
                            JoinedDate = new DateTime(2019, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1,
                            Salary = 72000.00m,
                            Specialty = "Chinese Stir-Fry"
                        });
                });

            modelBuilder.Entity("Restuarant_Management.Models.Cuisine", b =>
                {
                    b.Property<int>("CuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuisineId"));

                    b.Property<int>("ChefId")
                        .HasColumnType("int");

                    b.Property<string>("CuisineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CuisineId");

                    b.HasIndex("ChefId");

                    b.ToTable("Cuisines");

                    b.HasData(
                        new
                        {
                            CuisineId = 1,
                            ChefId = 1,
                            CuisineName = "Italian",
                            DishName = "Pasta Alfredo",
                            IsVegetarian = true,
                            Price = 350.00m
                        },
                        new
                        {
                            CuisineId = 2,
                            ChefId = 2,
                            CuisineName = "Indian",
                            DishName = "Butter Chicken",
                            IsVegetarian = false,
                            Price = 400.00m
                        },
                        new
                        {
                            CuisineId = 3,
                            ChefId = 3,
                            CuisineName = "Chinese",
                            DishName = "Kung Pao Chicken",
                            IsVegetarian = false,
                            Price = 380.00m
                        },
                        new
                        {
                            CuisineId = 4,
                            ChefId = 2,
                            CuisineName = "Indian",
                            DishName = "Paneer Tikka",
                            IsVegetarian = true,
                            Price = 300.00m
                        });
                });

            modelBuilder.Entity("Restuarant_Management.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<decimal>("AverageMealPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EstablishedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("RestuarantName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            AverageMealPrice = 0m,
                            EstablishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Bangalore",
                            Rating = 0,
                            RestuarantName = "Spice Garden"
                        },
                        new
                        {
                            RestaurantId = 2,
                            AverageMealPrice = 0m,
                            EstablishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Hyderabad",
                            Rating = 0,
                            RestuarantName = "Tandoori Treats"
                        },
                        new
                        {
                            RestaurantId = 3,
                            AverageMealPrice = 0m,
                            EstablishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Chennai",
                            Rating = 0,
                            RestuarantName = "Ocean Breeze"
                        },
                        new
                        {
                            RestaurantId = 4,
                            AverageMealPrice = 0m,
                            EstablishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Delhi",
                            Rating = 0,
                            RestuarantName = "Royal Curry House"
                        });
                });

            modelBuilder.Entity("Restuarant_Management.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PasswordHash = "hash_admin123",
                            RegisteredDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            PasswordHash = "hash_john123",
                            RegisteredDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Customer",
                            Username = "john"
                        },
                        new
                        {
                            UserId = 3,
                            PasswordHash = "hash_emma123",
                            RegisteredDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Manager",
                            Username = "emma"
                        });
                });

            modelBuilder.Entity("Restuarant_Management.Models.UserRestaurant", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("UserRestaurants");
                });

            modelBuilder.Entity("Restuarant_Management.Models.Chef", b =>
                {
                    b.HasOne("Restuarant_Management.Models.Restaurant", "Restaurant")
                        .WithMany("Chefs")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Restuarant_Management.Models.Cuisine", b =>
                {
                    b.HasOne("Restuarant_Management.Models.Chef", "Chef")
                        .WithMany("Cuisines")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chef");
                });

            modelBuilder.Entity("Restuarant_Management.Models.UserRestaurant", b =>
                {
                    b.HasOne("Restuarant_Management.Models.Restaurant", "Restaurant")
                        .WithMany("UserRestaurant")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restuarant_Management.Models.User", "User")
                        .WithMany("UserRestaurants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Restuarant_Management.Models.Chef", b =>
                {
                    b.Navigation("Cuisines");
                });

            modelBuilder.Entity("Restuarant_Management.Models.Restaurant", b =>
                {
                    b.Navigation("Chefs");

                    b.Navigation("UserRestaurant");
                });

            modelBuilder.Entity("Restuarant_Management.Models.User", b =>
                {
                    b.Navigation("UserRestaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
